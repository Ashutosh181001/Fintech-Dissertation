# Create the .env file
cat > .env << 'EOF'
# GCP Settings
PROJECT_ID=crypto-anomaly-detection
REGION=europe-west2
CLUSTER_NAME=crypto-realtime
AR_REPO=crypto
NAMESPACE=crypto
SERVICE_ACCOUNT=crypto-sa

# Storage
GCS_BUCKET=crypto-realtime-data
MOUNT_PATH=/data

# Kafka (will fill these in next step)
KAFKA_BOOTSTRAP=pkc-l6wr6.europe-west2.gcp.confluent.cloud:9092
KAFKA_USERNAME=TID2HZFAIXB5IWN5
KAFKA_SECRET=cflt3LaBgYbfB9Qaby4f7A3shWgqYFe6vps2TuDY8RIVFYm/xuNvXOGqIg63voxg
KAFKA_TOPIC_TRADES=crypto_trades
KAFKA_CONSUMER_GROUP=anomaly-detector
KAFKA_RESOURCE=lkc-2gdnqy

# App paths
DATABASE_PATH=/data/output/trading_anomalies.db
TRADES_CSV=/data/output/trades.csv
ANOMALIES_CSV=/data/output/anomalies.csv
BENCHMARK_CSV=/data/output/performance_log.csv
EOF


kubectl create secret generic kafka-credentials -n crypto \
  --from-literal=KAFKA_BOOTSTRAP='pkc-l6wr6.europe-west2.gcp.confluent.cloud:9092' \
  --from-literal=KAFKA_USERNAME='TID2HZFAIXB5IWN5' \
  --from-literal=KAFKA_PASSWORD='cflt3LaBgYbfB9Qaby4f7A3shWgqYFe6vps2TuDY8RIVFYm/xuNvXOGqIg63voxg' \
  --from-literal=KAFKA_TOPIC_TRADES='crypto_trades' \
  --from-literal=KAFKA_CONSUMER_GROUP='anomaly-detector' \
  --from-literal=KAFKA_SECURITY_PROTOCOL='SASL_SSL' \
  --from-literal=KAFKA_SASL_MECHANISM='PLAIN' \
  --dry-run=client -o yaml | kubectl apply -f -